= content_for :head do
  = stylesheet_link_tag    "words", media: "all", "data-turbolinks-track" => true
  = javascript_include_tag 'words'

セリフ画像で
%strong
  俳句が自動生成
されます。
%br
今までに作成された俳句数 :  #{HaikuSet.count}

%h1 最近カッパされた俳句

※良いと思った俳句には「カッパだね」をしましょう。カッパだねぇ。

- word1 = Word.find @good.word1
- word2 = Word.find @good.word2
- word3 = Word.find @good.word3
= render partial: "/words/haiku", locals: {word1: word1, word2: word2, word3: word3}
.main
  %table.table.table-striped.table-hover
    %tr
      %td.center
        = link_to word_path(word1) do
          = image_tag word1.avatar.url(:medium), alt: word1.text
    %tr
      %td.center
        = link_to word_path(word2) do
          = image_tag word2.avatar.url(:medium), alt: word2.text
    %tr
      %td.center
        = link_to word_path(word3) do
          = image_tag word3.avatar.url(:medium), alt: word2.text
%br
= render partial: "/words/good", locals: {id_list: [word1.id, word2.id, word3.id]}
%br
= link_to 'この俳句の詳細をみる', haiku_set_path("#{word1.id}-#{word2.id}-#{word3.id}")
%br
= link_to '他の俳句を見る', "/haiku/#{SecureRandom.urlsafe_base64(6)}", class: 'btn btn-info'
※ 俳句が自動生成されます

%h1 最近カッパされた短歌

- word1 = Word.find @tanka_good.word1
- word2 = Word.find @tanka_good.word2
- word3 = Word.find @tanka_good.word3
- word4 = Word.find @tanka_good.word4
- word5 = Word.find @tanka_good.word5
= render partial: "/words/tanka", locals: {word1: word1, word2: word2, word3: word3, word4: word4, word5: word5}
.main
  %table.table.table-striped.table-hover
    %tr
      %td.center
        = link_to word_path(word1) do
          = image_tag word1.avatar.url(:medium), alt: word1.text
    %tr
      %td.center
        = link_to word_path(word2) do
          = image_tag word2.avatar.url(:medium), alt: word2.text
    %tr
      %td.center
        = link_to word_path(word3) do
          = image_tag word3.avatar.url(:medium), alt: word3.text
    %tr
      %td.center
        = link_to word_path(word4) do
          = image_tag word4.avatar.url(:medium), alt: word4.text
    %tr
      %td.center
        = link_to word_path(word5) do
          = image_tag word5.avatar.url(:medium), alt: word5.text
%br
= render partial: "/words/tanka_good", locals: {id_list: [word1.id, word2.id, word3.id, word4.id, word5.id]}
%br
= link_to '他の短歌を見る', "/tanka/#{SecureRandom.urlsafe_base64(6)}", class: 'btn btn-info'
※ 短歌が自動生成されます

%h1 最近のコメント

最近コメントされた俳句は下記の通り。コメントしてくれるとカッパが喜ぶ。

- if @comments.present?
  %table.table.table-striped.table-hover
    %tr
      %th 俳句
      %th 名前
      %th コメント
    - @comments.each do |comment|
      %tr
        %td
          = link_to comment.haiku_set.word_text, haiku_set_path(comment.haiku_set.word_ids)
        %td= comment.name
        %td= comment.body
- else
  コメントなど存在しない

%h1 最近追加された画像

この画像で究極の俳句が生まれる、かもしれない

= image_tag @word.avatar.url(:medium), alt: @word.text
%br
= @word.text
